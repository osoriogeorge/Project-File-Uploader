// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  folders   Folder[]
  files     File[]
  // Otros campos de usuario
}

model Folder {
  id        Int      @id @default(autoincrement())
  name      String
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  files     File[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([userId, name]) 
}

model File {
  id        Int      @id @default(autoincrement())
  filename  String
  originalName String
  url           String
  mimeType  String
  size      Int
  folderId  Int
  folder    Folder   @relation(fields: [folderId], references: [id], onDelete: Cascade)
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Session {
  id        String   @id @default(cuid())
  sid       String   @unique
  data      String   @db.Text
  expiresAt DateTime
 
}